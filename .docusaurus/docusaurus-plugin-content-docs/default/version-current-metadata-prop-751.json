{
  "pluginId": "default",
  "version": "current",
  "label": "Next",
  "banner": null,
  "badge": false,
  "noIndex": false,
  "className": "docs-version-current",
  "isLast": true,
  "docsSidebars": {
    "defaultSidebar": [
      {
        "type": "link",
        "label": "Welcome",
        "href": "/docs/intro",
        "docId": "intro"
      },
      {
        "type": "link",
        "label": "Installation",
        "href": "/docs/installation",
        "docId": "installation"
      },
      {
        "type": "link",
        "label": "Getting Started",
        "href": "/docs/getting-started",
        "docId": "getting-started"
      },
      {
        "type": "category",
        "label": "App Development",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "category",
            "label": "Creating an actor",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Generating a new actor project",
                "href": "/docs/app-dev/create-actor/generate",
                "docId": "app-dev/create-actor/generate"
              },
              {
                "type": "link",
                "label": "Running the actor",
                "href": "/docs/app-dev/create-actor/run",
                "docId": "app-dev/create-actor/run"
              },
              {
                "type": "link",
                "label": "Customizing the actor",
                "href": "/docs/app-dev/create-actor/update",
                "docId": "app-dev/create-actor/update"
              },
              {
                "type": "link",
                "label": "Testing the actor (Rust)",
                "href": "/docs/app-dev/create-actor/test",
                "docId": "app-dev/create-actor/test"
              }
            ],
            "href": "/docs/app-dev/create-actor/"
          },
          {
            "type": "link",
            "label": "Actor to actor calls",
            "href": "/docs/app-dev/a2a/",
            "docId": "app-dev/a2a/index"
          },
          {
            "type": "category",
            "label": "Creating capability providers",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Creating an interface",
                "href": "/docs/app-dev/create-provider/new-interface",
                "docId": "app-dev/create-provider/new-interface"
              },
              {
                "type": "link",
                "label": "Creating a new provider",
                "href": "/docs/app-dev/create-provider/rust",
                "docId": "app-dev/create-provider/rust"
              },
              {
                "type": "link",
                "label": "Creating a provider archive",
                "href": "/docs/app-dev/create-provider/create-par",
                "docId": "app-dev/create-provider/create-par"
              },
              {
                "type": "link",
                "label": "Calling the provider from an actor",
                "href": "/docs/app-dev/create-provider/consuming",
                "docId": "app-dev/create-provider/consuming"
              },
              {
                "type": "link",
                "label": "Testing the new provider",
                "href": "/docs/app-dev/create-provider/testing",
                "docId": "app-dev/create-provider/testing"
              }
            ],
            "href": "/docs/app-dev/create-provider/"
          },
          {
            "type": "category",
            "label": "Securing a wasmCloud App",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Environment Variables",
                "href": "/docs/app-dev/secure/env",
                "docId": "app-dev/secure/env"
              },
              {
                "type": "link",
                "label": "Cluster Keys and Issuers",
                "href": "/docs/app-dev/secure/clusterkeys",
                "docId": "app-dev/secure/clusterkeys"
              },
              {
                "type": "link",
                "label": "NATS Connections",
                "href": "/docs/app-dev/secure/nats",
                "docId": "app-dev/secure/nats"
              }
            ],
            "href": "/docs/app-dev/secure/"
          },
          {
            "type": "category",
            "label": "Developer Workflows",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "OpenTelemetry Tracing",
                "href": "/docs/app-dev/workflow/tracing.en",
                "docId": "app-dev/workflow/tracing.en"
              }
            ],
            "href": "/docs/app-dev/workflow/"
          },
          {
            "type": "category",
            "label": "Errors and Debugging",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Host Troubleshooting",
                "href": "/docs/app-dev/debugging/host",
                "docId": "app-dev/debugging/host"
              },
              {
                "type": "link",
                "label": "Actor Troubleshooting",
                "href": "/docs/app-dev/debugging/actors",
                "docId": "app-dev/debugging/actors"
              },
              {
                "type": "link",
                "label": "Provider Troubleshooting",
                "href": "/docs/app-dev/debugging/providers",
                "docId": "app-dev/debugging/providers"
              }
            ],
            "href": "/docs/app-dev/debugging/"
          }
        ],
        "href": "/docs/app-dev/"
      },
      {
        "type": "category",
        "label": "Platform Builder",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "Running on 'Bare Metal'",
            "href": "/docs/platform-builder/bare-metal/",
            "docId": "platform-builder/bare-metal/index"
          },
          {
            "type": "link",
            "label": "Running in a Docker image",
            "href": "/docs/platform-builder/docker/",
            "docId": "platform-builder/docker/index"
          },
          {
            "type": "link",
            "label": "Running on Kubernetes",
            "href": "/docs/platform-builder/k8s/",
            "docId": "platform-builder/k8s/index"
          },
          {
            "type": "link",
            "label": "Integrating with OpenFaas",
            "href": "/docs/platform-builder/openfaas/",
            "docId": "platform-builder/openfaas/index"
          },
          {
            "type": "category",
            "label": "Creating Custom Hosts",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Building a Host from Spec",
                "href": "/docs/platform-builder/custom-host/fromspec",
                "docId": "platform-builder/custom-host/fromspec"
              }
            ],
            "href": "/docs/platform-builder/custom-host/"
          },
          {
            "type": "link",
            "label": "OCI Registries and the Lattice",
            "href": "/docs/platform-builder/oci/",
            "docId": "platform-builder/oci/index"
          },
          {
            "type": "link",
            "label": "Lattice Deployment Strategies",
            "href": "/docs/platform-builder/lattice-deploy/",
            "docId": "platform-builder/lattice-deploy/index"
          }
        ],
        "href": "/docs/platform-builder/"
      },
      {
        "type": "category",
        "label": "Interfaces",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "Code generation",
            "href": "/docs/interfaces/code-generation",
            "docId": "interfaces/code-generation"
          },
          {
            "type": "link",
            "label": "codegen.toml files",
            "href": "/docs/interfaces/codegen-toml",
            "docId": "interfaces/codegen-toml"
          },
          {
            "type": "link",
            "label": "Rust crates",
            "href": "/docs/interfaces/crates-io",
            "docId": "interfaces/crates-io"
          },
          {
            "type": "category",
            "label": "Tips",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Single-member structures",
                "href": "/docs/interfaces/tips/avoid-single-member-structures",
                "docId": "interfaces/tips/avoid-single-member-structures"
              },
              {
                "type": "link",
                "label": "Clippy warnings",
                "href": "/docs/interfaces/tips/clippy-warnings",
                "docId": "interfaces/tips/clippy-warnings"
              },
              {
                "type": "link",
                "label": "Error messages",
                "href": "/docs/interfaces/tips/error-messages",
                "docId": "interfaces/tips/error-messages"
              },
              {
                "type": "link",
                "label": "Lint and validate checks",
                "href": "/docs/interfaces/tips/lint-validate",
                "docId": "interfaces/tips/lint-validate"
              }
            ],
            "href": "/docs/interfaces/tips/"
          },
          {
            "type": "link",
            "label": "Annotation traits",
            "href": "/docs/interfaces/traits",
            "docId": "interfaces/traits"
          },
          {
            "type": "link",
            "label": "wasmCloud Smithy",
            "href": "/docs/interfaces/wasmcloud-smithy",
            "docId": "interfaces/wasmcloud-smithy"
          }
        ],
        "href": "/docs/interfaces/"
      },
      {
        "type": "category",
        "label": "Reference",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "category",
            "label": "Alternate Install Methods",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Install with Docker",
                "href": "/docs/reference/alternate-install-methods/install-with-docker",
                "docId": "reference/alternate-install-methods/install-with-docker"
              },
              {
                "type": "link",
                "label": "Manual Install",
                "href": "/docs/reference/alternate-install-methods/manual-install",
                "docId": "reference/alternate-install-methods/manual-install"
              }
            ],
            "href": "/docs/category/alternate-install-methods"
          },
          {
            "type": "category",
            "label": "Lattice",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Working with Leaf Nodes",
                "href": "/docs/reference/lattice/leaf-nodes",
                "docId": "reference/lattice/leaf-nodes"
              },
              {
                "type": "link",
                "label": "Security patterns",
                "href": "/docs/reference/lattice/security-patterns",
                "docId": "reference/lattice/security-patterns"
              },
              {
                "type": "link",
                "label": "NGS as an infrastructure bridge",
                "href": "/docs/reference/lattice/ngs",
                "docId": "reference/lattice/ngs"
              },
              {
                "type": "link",
                "label": "Configuring JetStream",
                "href": "/docs/reference/lattice/jetstream",
                "docId": "reference/lattice/jetstream"
              },
              {
                "type": "link",
                "label": "Leaf Node Config (JS)",
                "href": "/docs/reference/lattice/js_leaf",
                "docId": "reference/lattice/js_leaf"
              },
              {
                "type": "link",
                "label": "Scheduling Auctions",
                "href": "/docs/reference/lattice/auctions",
                "docId": "reference/lattice/auctions"
              },
              {
                "type": "link",
                "label": "Provisioning and Managing",
                "href": "/docs/reference/lattice/provision",
                "docId": "reference/lattice/provision"
              }
            ],
            "href": "/docs/reference/lattice/"
          },
          {
            "type": "category",
            "label": "wasmCloud Host Runtime",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Architecture",
                "href": "/docs/reference/host-runtime/architecture",
                "docId": "reference/host-runtime/architecture"
              },
              {
                "type": "link",
                "label": "Actors",
                "href": "/docs/reference/host-runtime/actors",
                "docId": "reference/host-runtime/actors"
              },
              {
                "type": "link",
                "label": "Capabilities",
                "href": "/docs/reference/host-runtime/capabilities",
                "docId": "reference/host-runtime/capabilities"
              },
              {
                "type": "link",
                "label": "Security",
                "href": "/docs/reference/host-runtime/security",
                "docId": "reference/host-runtime/security"
              },
              {
                "type": "link",
                "label": "Provider Archives",
                "href": "/docs/reference/host-runtime/provider-archive",
                "docId": "reference/host-runtime/provider-archive"
              },
              {
                "type": "link",
                "label": "Link Definitions",
                "href": "/docs/reference/host-runtime/links",
                "docId": "reference/host-runtime/links"
              },
              {
                "type": "link",
                "label": "Host Manifests",
                "href": "/docs/reference/host-runtime/manifest",
                "docId": "reference/host-runtime/manifest"
              },
              {
                "type": "link",
                "label": "Host Configuration",
                "href": "/docs/reference/host-runtime/host_configure",
                "docId": "reference/host-runtime/host_configure"
              },
              {
                "type": "link",
                "label": "Health Checks",
                "href": "/docs/reference/host-runtime/healthchecks",
                "docId": "reference/host-runtime/healthchecks"
              },
              {
                "type": "link",
                "label": "Running the Host",
                "href": "/docs/reference/host-runtime/running",
                "docId": "reference/host-runtime/running"
              },
              {
                "type": "link",
                "label": "Safe Shutdown",
                "href": "/docs/reference/host-runtime/safeshutdown",
                "docId": "reference/host-runtime/safeshutdown"
              }
            ],
            "href": "/docs/reference/host-runtime/"
          },
          {
            "type": "category",
            "label": "Lattice Protocols",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Namespace Prefix",
                "href": "/docs/reference/lattice-protocols/prefix",
                "docId": "reference/lattice-protocols/prefix"
              },
              {
                "type": "link",
                "label": "RPC",
                "href": "/docs/reference/lattice-protocols/rpc",
                "docId": "reference/lattice-protocols/rpc"
              },
              {
                "type": "link",
                "label": "Control interface",
                "href": "/docs/reference/lattice-protocols/control-interface",
                "docId": "reference/lattice-protocols/control-interface"
              }
            ],
            "href": "/docs/reference/lattice-protocols/"
          },
          {
            "type": "category",
            "label": "wasmbus",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "wasmbus FFI Functions",
                "href": "/docs/reference/wasmbus/ffi",
                "docId": "reference/wasmbus/ffi"
              },
              {
                "type": "link",
                "label": "The wasmbus Protocol",
                "href": "/docs/reference/wasmbus/protocol",
                "docId": "reference/wasmbus/protocol"
              }
            ],
            "href": "/docs/reference/wasmbus/"
          },
          {
            "type": "category",
            "label": "Bindle and wasmCloud",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Using Bindle with wasmCloud",
                "href": "/docs/reference/bindle/using-bindles",
                "docId": "reference/bindle/using-bindles"
              },
              {
                "type": "link",
                "label": "Creating a Bindle for a Provider",
                "href": "/docs/reference/bindle/provider-bindles",
                "docId": "reference/bindle/provider-bindles"
              },
              {
                "type": "link",
                "label": "Creating a Bindle for an Actor",
                "href": "/docs/reference/bindle/actor-bindles",
                "docId": "reference/bindle/actor-bindles"
              }
            ],
            "href": "/docs/reference/bindle/"
          },
          {
            "type": "category",
            "label": "App Deployments (wadm)",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Installation",
                "href": "/docs/reference/wadm/install",
                "docId": "reference/wadm/install"
              },
              {
                "type": "link",
                "label": "Wadm App Model",
                "href": "/docs/reference/wadm/model",
                "docId": "reference/wadm/model"
              },
              {
                "type": "link",
                "label": "Using wadm",
                "href": "/docs/reference/wadm/usage",
                "docId": "reference/wadm/usage"
              },
              {
                "type": "link",
                "label": "API Reference",
                "href": "/docs/reference/wadm/api",
                "docId": "reference/wadm/api"
              }
            ],
            "href": "/docs/reference/wadm/"
          },
          {
            "type": "link",
            "label": "Reference Applications",
            "href": "/docs/reference/refapps/",
            "docId": "reference/refapps/index"
          },
          {
            "type": "link",
            "label": "Official OCI Image List",
            "href": "/docs/reference/official-oci/",
            "docId": "reference/official-oci/index"
          },
          {
            "type": "category",
            "label": "wasmCloud Shell (wash)",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Contexts",
                "href": "/docs/reference/wash/contexts",
                "docId": "reference/wash/contexts"
              }
            ],
            "href": "/docs/reference/wash/"
          }
        ],
        "href": "/docs/category/reference"
      }
    ]
  },
  "docs": {
    "app-dev/a2a/index": {
      "id": "app-dev/a2a/index",
      "title": "Actor to actor calls",
      "description": "The ability for one actor to call another actor is critical to being able to create composable actor systems. wasmCloud supports RPC-style communication between actors, even if those actors are running in hosts scattered across disparate infrastructure, connected only via the lattice.",
      "sidebar": "defaultSidebar"
    },
    "app-dev/create-actor/generate": {
      "id": "app-dev/create-actor/generate",
      "title": "Generating a new actor project",
      "description": "Creating the scaffold for a new actor in Rust is easy. We will create an actor that accepts an HTTP request and responds with \"Hello World\". To create your new actor project, change to the directory where you want the project to be created, and enter the command below. The last term on the command hello is the project name. If you choose a different project name, the name of the subdirectory and some symbols in the generated code will be different from the example code in this guide.",
      "sidebar": "defaultSidebar"
    },
    "app-dev/create-actor/index": {
      "id": "app-dev/create-actor/index",
      "title": "Creating an actor",
      "description": "To perform the steps in this guide, you'll need to have completed installation of the wasmCloud host and prerequisites, and if you're using Rust, the wasm32 target installed:",
      "sidebar": "defaultSidebar"
    },
    "app-dev/create-actor/run": {
      "id": "app-dev/create-actor/run",
      "title": "Running the actor",
      "description": "In Getting started you ran an actor from the dashboard UI. Now, we're going to start the actor \"the long way\" so that you can get a feel for all of the moving parts of the process. Our tooling documentation should help you get actors started more easily, once you've been through this guide.",
      "sidebar": "defaultSidebar"
    },
    "app-dev/create-actor/test": {
      "id": "app-dev/create-actor/test",
      "title": "Testing the actor (Rust)",
      "description": "Now that your actor project is generated we can write a simple unit test to verify its functionality. We want to ensure that our logic to parse the query string for a name and return Hello  is correct.",
      "sidebar": "defaultSidebar"
    },
    "app-dev/create-actor/update": {
      "id": "app-dev/create-actor/update",
      "title": "Customizing the actor",
      "description": "Prerequisites",
      "sidebar": "defaultSidebar"
    },
    "app-dev/create-provider/consuming": {
      "id": "app-dev/create-provider/consuming",
      "title": "Calling the provider from an actor",
      "description": "It's a fairly easy matter to declare a dependency on the Payments interface crate for a new actor project. However, the difficult question isn't how can an actor utilize this new payments provider, but why and when?",
      "sidebar": "defaultSidebar"
    },
    "app-dev/create-provider/create-par": {
      "id": "app-dev/create-provider/create-par",
      "title": "Creating a provider archive",
      "description": "A provider archive (also called a par file) is an archive file (in unix 'tar' format) containing platform-specific executable files for a variety of CPU and OS combinations. A typical provider archive file contains executables for 64-bit linux, x86_64 macos, aarch64 macos, and other supported platforms. The par file includes a cryptographically signed JSON Web Token (JWT) that contains a set of claims attestations for the capability provider.",
      "sidebar": "defaultSidebar"
    },
    "app-dev/create-provider/index": {
      "id": "app-dev/create-provider/index",
      "title": "Creating capability providers",
      "description": "When you decide to create a new capability provider, you have two options:",
      "sidebar": "defaultSidebar"
    },
    "app-dev/create-provider/new-interface": {
      "id": "app-dev/create-provider/new-interface",
      "title": "Creating an interface",
      "description": "The first thing we're going to need for our payments service sample capability provider is an interface. An interface describes the data types that actors and providers exchange, as well as the supported operations that can be invoked, and the relative directions of those operations.",
      "sidebar": "defaultSidebar"
    },
    "app-dev/create-provider/rust": {
      "id": "app-dev/create-provider/rust",
      "title": "Creating a new provider",
      "description": "Creating a capability provider involves creating a native executable. All capability provider executables have the same basic requirements:",
      "sidebar": "defaultSidebar"
    },
    "app-dev/create-provider/testing": {
      "id": "app-dev/create-provider/testing",
      "title": "Testing the new provider",
      "description": "There are two ways to test a capability provider.",
      "sidebar": "defaultSidebar"
    },
    "app-dev/debugging/actors": {
      "id": "app-dev/debugging/actors",
      "title": "Actor Troubleshooting",
      "description": "Before you follow this section, it's highly recommended to configure your log level to debug in order to see the most information when debugging. You can use the host troubleshooting section for instructions on how to do this.",
      "sidebar": "defaultSidebar"
    },
    "app-dev/debugging/host": {
      "id": "app-dev/debugging/host",
      "title": "Host Troubleshooting",
      "description": "Host troubleshooting largely revolves around checking host logs and determining the issue from there. With wasmCloud we aim to log relevant information so that you can diagnose the source of the problem.",
      "sidebar": "defaultSidebar"
    },
    "app-dev/debugging/index": {
      "id": "app-dev/debugging/index",
      "title": "Errors and Debugging",
      "description": "The following sections detail ways to track down errors with specific wasmCloud components, as well as some of the most common issues we see when getting started with wasmCloud applications. It's recommended to start with the Host Troubleshooting guide first, as it details how to find wasmCloud's logs.",
      "sidebar": "defaultSidebar"
    },
    "app-dev/debugging/providers": {
      "id": "app-dev/debugging/providers",
      "title": "Provider Troubleshooting",
      "description": "This section is still under construction and is tracked in issue #99",
      "sidebar": "defaultSidebar"
    },
    "app-dev/index": {
      "id": "app-dev/index",
      "title": "App development",
      "description": "Guides and tutorials tailored for developers building applications that run on wasmcloud hosts.",
      "sidebar": "defaultSidebar"
    },
    "app-dev/secure/clusterkeys": {
      "id": "app-dev/secure/clusterkeys",
      "title": "Cluster Keys and Issuers",
      "description": "The concept of cluster keys and issuers is a classic example of an architectural pattern based on zero trust environments. Once a wasmCloud host has authenticated with its 2 NATS connections (discussed next), that host is open to sending and receiving both control signals and Remote Procedure Call (RPC) traffic.",
      "sidebar": "defaultSidebar"
    },
    "app-dev/secure/env": {
      "id": "app-dev/secure/env",
      "title": "Environment Variables",
      "description": "Environment variables are the primary means by which the wasmCloud host obtains configuration. For a full list of supported environment variables, check out the host configuration section of the documentation.",
      "sidebar": "defaultSidebar"
    },
    "app-dev/secure/index": {
      "id": "app-dev/secure/index",
      "title": "Securing a wasmCloud App",
      "description": "This section of the documentation provides an overview of securing wasmCloud applications. This refers specifically to securing the wasmCloud host process, securing command-line tooling, and ensuring the security of a lattice and supporting infrastructure.",
      "sidebar": "defaultSidebar"
    },
    "app-dev/secure/nats": {
      "id": "app-dev/secure/nats",
      "title": "NATS Connections",
      "description": "NATS forms the connective tissue that stitches together all of the wasmCloud hosts within a lattice. Each host requires two connections:",
      "sidebar": "defaultSidebar"
    },
    "app-dev/workflow/index": {
      "id": "app-dev/workflow/index",
      "title": "Developer Workflows",
      "description": "As a wasmCloud developer, there are a number of common day-to-day workflows that you will experience. Which workflows you run through and how often you do so depends entirely on what you're building.",
      "sidebar": "defaultSidebar"
    },
    "app-dev/workflow/tracing.en": {
      "id": "app-dev/workflow/tracing.en",
      "title": "OpenTelemetry Tracing",
      "description": "Support for exporting traces was added in version 0.55.0 of the wasmCloud host. This can be extremely useful for debugging, benchmarking, and developing wasmCloud applications due to the highly distributed nature of wasmCloud. If you haven't used OpenTelemetry(OTEL) before, the Distributed Traces section of the OTEL documentation is useful for prerequisite knowledge.",
      "sidebar": "defaultSidebar"
    },
    "getting-started": {
      "id": "getting-started",
      "title": "Getting Started",
      "description": "In this guide, we'll be taking a tour through some of the most common activities in the wasmCloud ecosystem, like starting and configuring actors and capability providers. We will save the guides for actually writing code for actors and providers for later, after you're familiar with the tooling and starting and stopping the runtime.",
      "sidebar": "defaultSidebar"
    },
    "installation": {
      "id": "installation",
      "title": "Installation",
      "description": "We will guide you through installation of wash, the wasmCloud Shell, which gives you the tools to install, run, and develop with wasmCloud.",
      "sidebar": "defaultSidebar"
    },
    "interfaces/code-generation": {
      "id": "interfaces/code-generation",
      "title": "Code generation",
      "description": "You only need to read this section if you want to customize code generation, write a new target language generator, or if you want to know more about how it works.",
      "sidebar": "defaultSidebar"
    },
    "interfaces/codegen-toml": {
      "id": "interfaces/codegen-toml",
      "title": "codegen.toml files",
      "description": "This document describes the syntax and functions of codegen.toml files.",
      "sidebar": "defaultSidebar"
    },
    "interfaces/crates-io": {
      "id": "interfaces/crates-io",
      "title": "Rust crates",
      "description": "This document applies to interface crates built from .smithy models, and provides some information about how and when source files are updated.",
      "sidebar": "defaultSidebar"
    },
    "interfaces/index": {
      "id": "interfaces/index",
      "title": "Interfaces",
      "description": "Guides, reference docs, and tips for defining interfaces and generating libraries.",
      "sidebar": "defaultSidebar"
    },
    "interfaces/tips/avoid-single-member-structures": {
      "id": "interfaces/tips/avoid-single-member-structures",
      "title": "Single-member structures",
      "description": "A function is modeled as an operation, with an optional input type",
      "sidebar": "defaultSidebar"
    },
    "interfaces/tips/clippy-warnings": {
      "id": "interfaces/tips/clippy-warnings",
      "title": "Clippy warnings",
      "description": "Clippy warning on &String parameters",
      "sidebar": "defaultSidebar"
    },
    "interfaces/tips/error-messages": {
      "id": "interfaces/tips/error-messages",
      "title": "Error messages",
      "description": "Error messages from the smithy model parser, invoked by build.rs in Rust project, can be very long and detailed, sometimes more verbose than you need.",
      "sidebar": "defaultSidebar"
    },
    "interfaces/tips/index": {
      "id": "interfaces/tips/index",
      "title": "Tips",
      "description": "This section conatains some suggestions and tips for writing and debugging interface definitions.",
      "sidebar": "defaultSidebar"
    },
    "interfaces/tips/lint-validate": {
      "id": "interfaces/tips/lint-validate",
      "title": "Lint and validate checks",
      "description": "The lint and validation checks are very useful for finding problems in smithy model files. They will detect syntax errors, missing dependencies, and style errors.",
      "sidebar": "defaultSidebar"
    },
    "interfaces/traits": {
      "id": "interfaces/traits",
      "title": "Annotation traits",
      "description": "The Smithy model defines several types of trait annotations. Some of these affect code generation or documentation generation. This document lists traits used in wasmCloud interfaces and used by the code generator. Some of the traits listed here do not currently influence code generation or system behavior, but we think may be used in the near future.",
      "sidebar": "defaultSidebar"
    },
    "interfaces/wasmcloud-smithy": {
      "id": "interfaces/wasmcloud-smithy",
      "title": "wasmCloud Smithy",
      "description": "wasmCloud's use of Smithy closely follows the Smithy IDL specification. This document is intended to be a quick reference to the major features of Smithy, and includes some conventions that wasmCloud has adopted for smithy-defined interfaces.",
      "sidebar": "defaultSidebar"
    },
    "intro": {
      "id": "intro",
      "title": "Welcome",
      "description": "wasmCloud is a platform designed to help developers quickly and easily code secure-by-default business logic with a rapid feedback loop that is free from the burden of boilerplate, integrated (e.g. tangled) dependencies, and tight coupling to non-functional requirements. It is a suite of tools and libraries that can be used to build distributed applications composed of portable units of business logic called actors.",
      "sidebar": "defaultSidebar"
    },
    "platform-builder/bare-metal/index": {
      "id": "platform-builder/bare-metal/index",
      "title": "Running on 'Bare Metal'",
      "description": "Running wasmCloud on \"bare metal\" is incredibly easy. You'll likely be taking advantage of this as you develop solutions on your workstation before deploying to production. If you've gone through the basic installation instructions, you'll already have the wasmCloud host runtime installed on your system.",
      "sidebar": "defaultSidebar"
    },
    "platform-builder/custom-host/fromspec": {
      "id": "platform-builder/custom-host/fromspec",
      "title": "Building a Host from Spec",
      "description": "In the preceding section of the documentation, we talked about how there are no restrictions in place preventing developers from building their own bespoke wasmCloud hosts that are optimized for specific environments.",
      "sidebar": "defaultSidebar"
    },
    "platform-builder/custom-host/index": {
      "id": "platform-builder/custom-host/index",
      "title": "Creating Custom Hosts",
      "description": "wasmCloud includes the default, OTP-based host runtime. We also have a JavaScript-based host runtime. However, there is nothing preventing anyone from making other specialized applications that can act as a wasmCloud host.",
      "sidebar": "defaultSidebar"
    },
    "platform-builder/docker/index": {
      "id": "platform-builder/docker/index",
      "title": "Running in a Docker image",
      "description": "Running the wasmCloud host runtime from a docker image is nearly as easy as running it locally. For more information on the docker image and how to use it, please see the official wasmCloud at docker hub, or view the Install with docker installation guide.",
      "sidebar": "defaultSidebar"
    },
    "platform-builder/index": {
      "id": "platform-builder/index",
      "title": "Platform building",
      "description": "Guides and tutorials tailored for those building platforms and infrastructure on top of wasmCloud",
      "sidebar": "defaultSidebar"
    },
    "platform-builder/k8s/index": {
      "id": "platform-builder/k8s/index",
      "title": "Running on Kubernetes",
      "description": "Although we think WebAssembly is the future, we know that there are plenty of things running in",
      "sidebar": "defaultSidebar"
    },
    "platform-builder/lattice-deploy/index": {
      "id": "platform-builder/lattice-deploy/index",
      "title": "Lattice Deployment Strategies",
      "description": "This area of the documentation is still evolving. For now, if you are interested in information on how you might deploy and configure lattices, you should check one of the following two resources:",
      "sidebar": "defaultSidebar"
    },
    "platform-builder/oci/index": {
      "id": "platform-builder/oci/index",
      "title": "OCI Registries and the Lattice",
      "description": "When using the control interface (a set of services and functionality exposed via NATS), you can tell \"the lattice\" to start and stop actors and capability providers. One of the ways that you can identify actors and capability providers is with an OCI Reference URL.",
      "sidebar": "defaultSidebar"
    },
    "platform-builder/openfaas/index": {
      "id": "platform-builder/openfaas/index",
      "title": "Integrating with OpenFaas",
      "description": "OpenFaas makes it easy to deploy functions to Kubernetes. One question we get asked from time to time is how wasmCloud either competes against or integrates with OpenFaas. A guiding principle for wasmCloud's strategy is to be compatible with, not competing against, other projects within the CNCF and larger ecosystem. It's very easy to design your actors so that they have a single handler function; making them look and operate a lot like stateless lambdas/cloud functions.",
      "sidebar": "defaultSidebar"
    },
    "reference/alternate-install-methods/install-with-docker": {
      "id": "reference/alternate-install-methods/install-with-docker",
      "title": "Install with Docker",
      "description": "Let's install NATS and the wasmCloud host runtime with Docker. You should have already installed prerequisites and wash. Additionally, make sure your Docker install has Compose v2.",
      "sidebar": "defaultSidebar"
    },
    "reference/alternate-install-methods/manual-install": {
      "id": "reference/alternate-install-methods/manual-install",
      "title": "Manual Install",
      "description": "As of wash v0.12.0, wash up will install a NATS server and wasmCloud for you, however it's still valuable to keep instructions on installing both manually for a minimal server install.",
      "sidebar": "defaultSidebar"
    },
    "reference/bindle/actor-bindles": {
      "id": "reference/bindle/actor-bindles",
      "title": "Creating a Bindle for an Actor",
      "description": "Currently, there is no tooling outside of the bindle CLI for creating a bindle for your actor.",
      "sidebar": "defaultSidebar"
    },
    "reference/bindle/index": {
      "id": "reference/bindle/index",
      "title": "Bindle and wasmCloud",
      "description": "As of wasmCloud host version 0.52, wasmCloud has experimental support for using",
      "sidebar": "defaultSidebar"
    },
    "reference/bindle/provider-bindles": {
      "id": "reference/bindle/provider-bindles",
      "title": "Creating a Bindle for a Provider",
      "description": "Currently, there is no tooling outside of the bindle CLI for creating a bindle for your provider.",
      "sidebar": "defaultSidebar"
    },
    "reference/bindle/using-bindles": {
      "id": "reference/bindle/using-bindles",
      "title": "Using Bindle with wasmCloud",
      "description": "Bindles can be used with both wash and the wasmCloud",
      "sidebar": "defaultSidebar"
    },
    "reference/host-runtime/actors": {
      "id": "reference/host-runtime/actors",
      "title": "Actors",
      "description": "An _actor_ is the smallest unit of deployable, portable compute within the wasmCloud ecosystem. Actors are small WebAssembly modules that can handle messages delivered to them by the host runtime and can invoke functions on capability providers, provided they have been granted the appropriate privileges.",
      "sidebar": "defaultSidebar"
    },
    "reference/host-runtime/architecture": {
      "id": "reference/host-runtime/architecture",
      "title": "Architecture",
      "description": "This section is still under construction and is being tracked in issue #42",
      "sidebar": "defaultSidebar"
    },
    "reference/host-runtime/capabilities": {
      "id": "reference/host-runtime/capabilities",
      "title": "Capabilities",
      "description": "A _capability_ is an abstraction or representation of a non-functional requirement; some functionality required by your actor that is not considered part of the core business logic. As you write an actor that exposes some data over a RESTful endpoint, the HTTP server and the database are not parts of your business logic, they are services used by your actor--capabilities.",
      "sidebar": "defaultSidebar"
    },
    "reference/host-runtime/healthchecks": {
      "id": "reference/host-runtime/healthchecks",
      "title": "Health Checks",
      "description": "There are a number of different health check mechanisms available within the wasmCloud host. One health check type is internal, which will periodically send a health check message to an actor or capability provider to see if it is still responding. The second type involves exposing liveness and readiness probe endpoints that can be used when running in containerized or orchestrated (e.g. Kubernetes) environments.",
      "sidebar": "defaultSidebar"
    },
    "reference/host-runtime/host_configure": {
      "id": "reference/host-runtime/host_configure",
      "title": "Host Configuration",
      "description": "The wasmcloud host is configured by environment variables, which can be set in the environment or .env files.",
      "sidebar": "defaultSidebar"
    },
    "reference/host-runtime/index": {
      "id": "reference/host-runtime/index",
      "title": "wasmCloud Host Runtime",
      "description": "The wasmCloud Host Runtime is an Elixir/OTP application that provides a distributed, resilient, highly performant runtime in which to run actors and capability providers.",
      "sidebar": "defaultSidebar"
    },
    "reference/host-runtime/links": {
      "id": "reference/host-runtime/links",
      "title": "Link Definitions",
      "description": "A _link definition_ is a declared set of configuration values between a specific actor (identified by its public key) and a specific capability provider (identified by its contract ID, link name, and public key). At first glance it may seem like the \"key\" for this bi-directional relationship contains redundant information, but remember that there are 3 different consumers of this relationship: the host runtime, the actor, and the capability provider.",
      "sidebar": "defaultSidebar"
    },
    "reference/host-runtime/manifest": {
      "id": "reference/host-runtime/manifest",
      "title": "Host Manifests",
      "description": "A host manifest contains a list of actors and providers that you would like to start on a given host. The manifest file is an imperative set of instructions, and so should not be considered either safe or idempotent to run multiple times. Think of the manifest file as a shortcut for invoking wash ctl over and over again.",
      "sidebar": "defaultSidebar"
    },
    "reference/host-runtime/provider-archive": {
      "id": "reference/host-runtime/provider-archive",
      "title": "Provider Archives",
      "description": "A _provider archive_ is, as its name implies, an archive file that contains a capability provider. Because we do not currently have sufficient networking support in the WASI specification and corresponding engine implementations, we don't yet have the ability to create capability providers out of the same portable WebAssembly files that we use to create actors.",
      "sidebar": "defaultSidebar"
    },
    "reference/host-runtime/running": {
      "id": "reference/host-runtime/running",
      "title": "Running the Host",
      "description": "The wasmCloud host runtime is an Elixir mix release that includes various scripts for running and managing an application. By running bin/wasmcloud_host, you'll see a variety of commands and options:",
      "sidebar": "defaultSidebar"
    },
    "reference/host-runtime/safeshutdown": {
      "id": "reference/host-runtime/safeshutdown",
      "title": "Safe Shutdown",
      "description": "In most cases, initiating a safe shutdown of the wasmCloud host runtime is quick and easy.",
      "sidebar": "defaultSidebar"
    },
    "reference/host-runtime/security": {
      "id": "reference/host-runtime/security",
      "title": "Security",
      "description": "wasmCloud embraces a zero trust security model. This means that the runtime, by default, does not trust any actor with the ability to do anything. Without adding security claims to an actor, the actor cannot send or receive messages in a wasmCloud runtime environment.",
      "sidebar": "defaultSidebar"
    },
    "reference/lattice-protocols/control-interface": {
      "id": "reference/lattice-protocols/control-interface",
      "title": "Control interface",
      "description": "The lattice control interface provides a way for clients to interact with the lattice to issue control commands and queries. This interface is a message broker protocol that supports functionality for starting and stopping actors and providers, declaring link definitions, monitoring lattice events, holding auctions to determine scheduling compatibility, and much more.",
      "sidebar": "defaultSidebar"
    },
    "reference/lattice-protocols/index": {
      "id": "reference/lattice-protocols/index",
      "title": "Lattice Protocols",
      "description": "wasmCloud's lattice network protocols are all open and language agnostic and use NATS as the underlying transport. This section describes the various requirements",
      "sidebar": "defaultSidebar"
    },
    "reference/lattice-protocols/prefix": {
      "id": "reference/lattice-protocols/prefix",
      "title": "Namespace Prefix",
      "description": "Lattices are designed to support multi-tenancy in that you can run multiple, isolated lattices on the same NATS cluster without",
      "sidebar": "defaultSidebar"
    },
    "reference/lattice-protocols/rpc": {
      "id": "reference/lattice-protocols/rpc",
      "title": "RPC",
      "description": "At its core, the lattice is essentially a Remote Procedure Call (RPC) bus layer built on top of the NATS message broker. When the lattice",
      "sidebar": "defaultSidebar"
    },
    "reference/lattice/auctions": {
      "id": "reference/lattice/auctions",
      "title": "Scheduling Auctions",
      "description": "All hosts within a lattice are mandated to participate in **auctions**. An auction is when some consumer of the lattice control interface (e.g. the wash CLI or another application) publishes a set of requirements to all hosts within the lattice.",
      "sidebar": "defaultSidebar"
    },
    "reference/lattice/index": {
      "id": "reference/lattice/index",
      "title": "Lattice",
      "description": "The lattice is a self-forming, self-healing mesh network that provides a unified, flattened topology across any number of disparate environments, clouds, browsers, or even hardware. A lattice allows actors and capability providers to communicate with each other across any number of intervening infrastructure barriers, exposing an “it just works” network optimized for short developer feedback loops as well production performance and resilience.",
      "sidebar": "defaultSidebar"
    },
    "reference/lattice/jetstream": {
      "id": "reference/lattice/jetstream",
      "title": "Configuring JetStream",
      "description": "The wasmCloud lattice makes use of a distributed cache. This cache is supplied by JetStream, which is convenient because JetStream comes \"for free\" with any recent NATS server version. For more information on the architectural considerations we made when deciding on JetStream for our distributed cache provider, please consult our ADR.",
      "sidebar": "defaultSidebar"
    },
    "reference/lattice/js_leaf": {
      "id": "reference/lattice/js_leaf",
      "title": "Leaf Node Config (JS)",
      "description": "NATS leaf nodes are a simple concept but they enable an incredible amount of power, flexibility, and use cases. A leaf node allows NATS servers to bridge or join security domains. On any given server, you can set up leaf node remotes that tether one account space on one side of the node to a different account space on the other side of the node.",
      "sidebar": "defaultSidebar"
    },
    "reference/lattice/leaf-nodes": {
      "id": "reference/lattice/leaf-nodes",
      "title": "Working with Leaf Nodes",
      "description": "A lattice _leaf node_ is nothing more than a wasmCloud host connected to a lattice via a NATS leaf node. Please consult the NATS documentation for detailed information on how to create, configure, manage, and deploy NATS leaf nodes.",
      "sidebar": "defaultSidebar"
    },
    "reference/lattice/ngs": {
      "id": "reference/lattice/ngs",
      "title": "NGS as an infrastructure bridge",
      "description": "_NGS_ is a global communications system built on top of NATS. Think of it as a universal, public \"dial tone\", that you can use to connect any endpoint to any other endpoint in the world, all without ever opening an internal firewall port.",
      "sidebar": "defaultSidebar"
    },
    "reference/lattice/provision": {
      "id": "reference/lattice/provision",
      "title": "Provisioning and Managing",
      "description": "This section of the documentation provides you with information and walkthroughs for provisioning new lattices and managing existing ones.",
      "sidebar": "defaultSidebar"
    },
    "reference/lattice/security-patterns": {
      "id": "reference/lattice/security-patterns",
      "title": "Security patterns",
      "description": "There are a virtually limitless number of ways in which you can deploy and configure the NATS substrate that supports your lattice. The following are just a few of the common security patterns that we recommend for deploying NATS for your wasmCloud applications.",
      "sidebar": "defaultSidebar"
    },
    "reference/official-oci/index": {
      "id": "reference/official-oci/index",
      "title": "Official OCI Image List",
      "description": "We maintain a list of all officially supported, continually updated, first-party images managed by the wasmcloud team in our Github repositories. Refer to the capability-providers repository for the latest updated versions of our first party capability providers, and the examples repository for the latest updated versions of our example actors and providers. The Releases page in both of those repositories shows the latest releases of the individual capability providers and examples.",
      "sidebar": "defaultSidebar"
    },
    "reference/refapps/index": {
      "id": "reference/refapps/index",
      "title": "Reference Applications",
      "description": "This section is still under construction and is being tracked in issue #40",
      "sidebar": "defaultSidebar"
    },
    "reference/wadm/api": {
      "id": "reference/wadm/api",
      "title": "API Reference",
      "description": "wadm API Specification",
      "sidebar": "defaultSidebar"
    },
    "reference/wadm/index": {
      "id": "reference/wadm/index",
      "title": "App Deployments (wadm)",
      "description": "wadm logo",
      "sidebar": "defaultSidebar"
    },
    "reference/wadm/install": {
      "id": "reference/wadm/install",
      "title": "Installation",
      "description": "The wasmCloud Application Deployment Manager (wadm) is an Elixir OTP application that you install and run within your infrastructure. For detailed installation and configuration instructions, refer to the documentation in wadm's GitHub repository.",
      "sidebar": "defaultSidebar"
    },
    "reference/wadm/model": {
      "id": "reference/wadm/model",
      "title": "Wadm App Model",
      "description": "The wasmCloud Application Deployment Manager uses the Open Application Model to define application specifications. Because this specification is extensible and platform agnostic, it makes for an ideal way to represent applications with metadata specific to wasmCloud. Don't worry if OAM seems overwhelming, you don't need to know much about it. We're using it as a way of defining application components in a flexible way that's familiar to a lot of people who have been working in the cloud space.",
      "sidebar": "defaultSidebar"
    },
    "reference/wadm/usage": {
      "id": "reference/wadm/usage",
      "title": "Using wadm",
      "description": "Using wadm typically involves using the wash command line tool. However, you can also use wash's supporting library in your Rust application or, if you continue to the next section, you'll see the API reference if you want to interact with wadm directly over a NATS connection.",
      "sidebar": "defaultSidebar"
    },
    "reference/wash/contexts": {
      "id": "reference/wash/contexts",
      "title": "Contexts",
      "description": "✨New in wash v0.7.0",
      "sidebar": "defaultSidebar"
    },
    "reference/wash/index": {
      "id": "reference/wash/index",
      "title": "wasmCloud Shell (wash)",
      "description": "_wash_ (the wasmCloud Shell) is a single command-line interface (CLI) to handle all of your wasmCloud tooling needs. This CLI has a number of sub-commands that help you interact with the wasmCloud ecosystem:",
      "sidebar": "defaultSidebar"
    },
    "reference/wasmbus/ffi": {
      "id": "reference/wasmbus/ffi",
      "title": "wasmbus FFI Functions",
      "description": "For the curious, here is the exact list of the wasmbus protocol’s functions. The guest always imports from a module called wasmbus, and all function names are preceded by two underscores to avoid accidental collisions with other exported functions.",
      "sidebar": "defaultSidebar"
    },
    "reference/wasmbus/index": {
      "id": "reference/wasmbus/index",
      "title": "wasmbus",
      "description": "If you know in advance the memory and data exchange characteristics of your WebAssembly modules, and you know the lifetimes of the data being exchanged, and you can predict the kind of long-lived pointer behavior you’ll have, then by all means use every tool and code generator at your disposal (e.g. wasm-bindgen).",
      "sidebar": "defaultSidebar"
    },
    "reference/wasmbus/protocol": {
      "id": "reference/wasmbus/protocol",
      "title": "The wasmbus Protocol",
      "description": "wasmbus has a few core requirements. The first is that the protocol must never expose the internal allocation strategy of either side of the conversation. This allows that same allocation strategy to change over time without requiring a rebuild and redeploy of any WebAssembly modules.",
      "sidebar": "defaultSidebar"
    }
  }
}