{
  "pluginId": "default",
  "version": "current",
  "label": "Next",
  "banner": null,
  "badge": false,
  "noIndex": false,
  "className": "docs-version-current",
  "isLast": true,
  "docsSidebars": {
    "defaultSidebar": [
      {
        "type": "link",
        "label": "Welcome",
        "href": "/docs/intro",
        "docId": "intro"
      },
      {
        "type": "link",
        "label": "Installation",
        "href": "/docs/installation",
        "docId": "installation"
      },
      {
        "type": "link",
        "label": "getting-started",
        "href": "/docs/getting-started",
        "docId": "getting-started"
      },
      {
        "type": "category",
        "label": "App development",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "Creating an Actor",
            "href": "/docs/app-development/creating-an-actor",
            "docId": "app-development/creating-an-actor"
          }
        ],
        "href": "/docs/category/app-development"
      }
    ]
  },
  "docs": {
    "app-development/creating-an-actor": {
      "id": "app-development/creating-an-actor",
      "title": "Creating an Actor",
      "description": "Creating the scaffold for a new actor in Rust is easy. We will create an actor that accepts an HTTP request and responds with \"Hello World\". To create your new actor project, change to the directory where you want the project to be created, and enter the command below. The last term on the command hello is the project name. If you choose a different project name, the name of the subdirectory and some symbols in the generated code will be different from the example code in this guide.",
      "sidebar": "defaultSidebar"
    },
    "getting-started": {
      "id": "getting-started",
      "title": "getting-started",
      "description": "Get",
      "sidebar": "defaultSidebar"
    },
    "installation": {
      "id": "installation",
      "title": "Installation",
      "description": "We will guide you through installation of wash, the wasmCloud Shell, which gives you the tools to install, run, and develop with wasmCloud.",
      "sidebar": "defaultSidebar"
    },
    "intro": {
      "id": "intro",
      "title": "Welcome",
      "description": "wasmCloud is a platform designed to help developers quickly and easily code secure-by-default business logic with a rapid feedback loop that is free from the burden of boilerplate, integrated (e.g. tangled) dependencies, and tight coupling to non-functional requirements. It is a suite of tools and libraries that can be used to build distributed applications composed of portable units of business logic called actors.",
      "sidebar": "defaultSidebar"
    }
  }
}